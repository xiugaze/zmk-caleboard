#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/* #include <dt-bindings/zmk/bt.h> */

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35
#define THUMBS 36 37 38 39

&mt { // mod-tap
  flavor = "tap-preferred";
  tapping-term-ms = <240>;
  quick-tap-ms = <150>;
  hold-trigger-key-positions = <0>;
};

&lt { // layer tap
  flavor = "tap-preferred";
  tapping-term-ms = <160>;
  quick-tap-ms = <120>;
};


/ {
  /* rpi: require_prior_idle { */
  /*   compatible = "zmk,behavior-hold-tap"; */
  /*   #binding-cells = <2>; */
  /*   flavor = "balanced"; */
  /*   tapping-term-ms = <200>; */
  /*   quick-tap-ms = <200>; */
  /*   require-prior-idle-ms = <125>; */
  /*   bindings = <&kp>, <&kp>; */
  /* }; */

  hml: home_row_mod_left {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <200>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
  };
  hmr: home_row_mod_right {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <200>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
  };

  keymap {
    compatible = "zmk,keymap";
    // -----------------------------------------------------------------------------------------
    // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
    // | ESC |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
    // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
    //                          | TAB | SPC |   | ENT | RSE  |
    default_layer {
      bindings = <
        &kp TAB      &kp Q      &kp W      &kp E       &kp R       &kp T           &kp Y       &kp U        &kp I        &kp O       &kp P         &kp BSPC
        &mt CLCK ESC &hml LGUI A &hml LALT S &hml LSHFT D &hml LCTRL F &kp G           &kp H       &hmr RCTRL J  &hmr RSHFT K  &hmr RALT L  &hmr RGUI SEMI &kp SQT
        &kp LSHFT    &kp Z      &kp X      &kp C       &kp V       &kp B           &kp N       &kp M        &kp COMMA    &kp DOT     &kp FSLH     &kp ESC
                                                      &kp TAB     &lt 1 RET        &lt 2 SPACE &kp BSPC
      >;
    };
    // -----------------------------------------------------------------------------------------
    // |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7   |  8  |  9  |  0  |      |
    // | CWRD |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &   |  *  |  (  |  )  |  |   |
    // | SHFT |  =  |  -  |  +  |  {  |  }  |   |  [  |  ]   |  ;  |  :  |  \  |      |
    //                          |     |     |   |     |      | 
    sym_layer {
      bindings = <
        &trans       &kp N1     &kp N2    &kp N3   &kp N4    &kp N5       &kp N6       &kp N7     &kp N8     &kp N9   &kp N0    &trans
        &caps_word   &kp EXCL   &kp AT    &kp HASH &kp DLLR  &kp PRCNT    &kp CARET    &kp AMPS   &kp STAR   &kp LPAR &kp RPAR  &kp PIPE
        &kp LSHFT    &kp EQUAL  &kp MINUS &kp PLUS &kp LBRC  &kp RBRC     &kp LBKT     &kp RBKT   &kp SEMI  &kp COLON  &kp BSLH &kp ESC
                                                    &trans    &trans      &trans        &trans
      >;
    };
    nav_layer {
      bindings = <
        &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5   &kp F6   &kp F7   &kp F8 &kp F9    &kp F10 &kp F11
        &trans &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &kp F12
        &trans &trans &trans &trans &trans &trans   &trans   &trans   &trans &trans    &trans &trans
                                    &trans &trans   &trans &trans
      >;
    };
  };
};
